name: Builds and pushes image

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        default: ""
        type: string
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        default: ""

jobs:
  inputs:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.output.outputs.version }}  
    steps:
    - id: output
      run: |
        echo "github.events.inputs: ${{ github.event.inputs.version }}"
        echo "inputs: ${{ inputs.version }}"
        echo "::set-output name=version::${{ github.event.inputs.version || inputs.version }}"

  docker:
    needs: inputs
    name: Deploy to DockerHub (latest)
    if: needs.inputs.outputs.version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile
          platforms: linux/arm64,linux/amd64
          push: true
          tags: |
            afonsoc12/telegraf:latest
            afonsoc12/telegraf:${{ needs.inputs.outputs.version }}
            ghcr.io/afonsoc12/telegraf:latest
            ghcr.io/afonsoc12/telegraf:${{ needs.inputs.outputs.version }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.inputs.outputs.version }}
          release_name: ${{ needs.inputs.outputs.version }}
          draft: false
          prerelease: false
